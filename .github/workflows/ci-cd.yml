name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 🔹 브랜치별 Spring profile 설정
      - name: Set Spring profile by branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}  # refs/heads/ 제거
          echo "Current branch: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == "master" ]]; then
            echo "SPRING_PROFILES_ACTIVE=prod" >> $GITHUB_ENV
          elif [[ "$BRANCH_NAME" == "develop" ]]; then
            echo "SPRING_PROFILES_ACTIVE=dev" >> $GITHUB_ENV
          elif [[ "$BRANCH_NAME" == feature/* ]]; then
            echo "SPRING_PROFILES_ACTIVE=local" >> $GITHUB_ENV
          else
            echo "SPRING_PROFILES_ACTIVE=dev" >> $GITHUB_ENV
          fi

      # 🔹 확인용
      - name: Check Spring profile
        run: echo "SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Gradle Tests
          path: build/test-results/test/*.xml
          reporter: java-junit

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build application
        run: ./gradlew bootJar

      - name: Set Spring profile by branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "master" ]]; then
            echo "SPRING_PROFILES_ACTIVE=prod" >> $GITHUB_ENV
          elif [[ "$BRANCH_NAME" == "develop" ]]; then
            echo "SPRING_PROFILES_ACTIVE=dev" >> $GITHUB_ENV
          elif [[ "$BRANCH_NAME" == feature/* ]]; then
            echo "SPRING_PROFILES_ACTIVE=local" >> $GITHUB_ENV
          else
            echo "SPRING_PROFILES_ACTIVE=dev" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PROFILE=${SPRING_PROFILES_ACTIVE}

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Kubernetes manifests
        run: |
          sed -i "s|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:develop|g" k8s/dev/deployment.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/dev/deployment.yaml
          git commit -m "Update dev deployment image to develop branch" || exit 0
          git push

  deploy-prod:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Kubernetes manifests
        run: |
          sed -i "s|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest|g" k8s/prod/deployment.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/prod/deployment.yaml
          git commit -m "Update prod deployment image to latest" || exit 0
          git push
